// Size
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .form-control#{$infix}-1 {
      @include input-size($input-height-xs, $input-padding-y-xs, $input-padding-x-xs, $input-font-size-xs, $input-line-height-xs, $input-border-radius-xs);
    }
    .form-control#{$infix}-2 {
      @include input-size($input-height-sm, $input-padding-y-sm, $input-padding-x-sm, $input-font-size-sm, $input-line-height-sm, $input-border-radius-sm);
    }
    .form-control#{$infix}-3 {
      @include input-size($input-height, $input-padding-y, $input-padding-x, $input-font-size, $input-line-height, $input-border-radius);
    }
    .form-control#{$infix}-4 {
      @include input-size($input-height-lg, $input-padding-y-lg, $input-padding-x-lg, $input-font-size-lg, $input-line-height-lg, $input-border-radius-lg);
    }
  }
}

// Input material
.input-material {
  padding-right: 0;
  padding-left: 0;
  @include border-radius(0);

  &,
  &:focus,
  &:disabled,
  &[readonly] {
    background-color: transparent;
  }

  &,
  &:focus {
    border-top-color: transparent;
    border-right-color: transparent;
    border-left-color: transparent;
    box-shadow: none;
  }

  @each $state, $data in $form-validation-states {
    @include form-validation-state-selector($state) {
      border-top-color: transparent;
      border-right-color: transparent;
      border-left-color: transparent;
      box-shadow: none;
    }
  }
}

// Dark
.input-dark {
  &,
  &:focus {
    background-color: $input-dark-bg;
    border-color: $input-dark-bg;
    color: $input-dark-color;
  }

  &:focus {
    box-shadow: none;
  }

  &::placeholder {
    color: $input-dark-color;
  }

  &:disabled,
  &[readonly] {
    background-color: darken($input-dark-color, 15%);
  }

  @each $state, $data in $form-validation-states {
    @include form-validation-state-selector($state) {
      background-color: map-get($data, color);
      box-shadow: none;
    }
  }
}

@each $color, $value in map-remove($theme-colors, "dark", "light") {
  .input-#{$color} {
    @include input-dark-variant($value);
  }
}
@each $color, $value in map-remove($custom-colors, "white") {
  .input-#{$color} {
    @include input-dark-variant($value);
  }
}

// Opacity
@if $enable-opacity {
  @for $alpha from 1 through 9 {
    @each $color, $value in map-remove($theme-colors, "light") {
      .input-#{$color}-#{($alpha * 10)} {
        @include input-dark-variant(rgba($value, ($alpha * .1)));
      }
    }
    @each $color, $value in $custom-colors {
      .input-#{$color}-#{($alpha * 10)} {
        @include input-dark-variant(rgba($value, ($alpha * .1)));
      }
    }
  }
}
