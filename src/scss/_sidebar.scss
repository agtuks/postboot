.sidebar {
  display: none;
  padding-top: $sidebar-padding-y;
  padding-bottom: $sidebar-padding-y;
  position: relative;

  .nav-text {
    display: none;
  }
}

.sidebar-brand {
  display: inline-block;
  padding: $sidebar-brand-padding-y $nav-link-padding-x;
  font-size: $sidebar-brand-font-size;
  line-height: inherit;
  white-space: nowrap;

  @include hover-focus {
    text-decoration: none;
  }
}

.sidebar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.sidebar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    display: block;
  }
}

.sidebar-text {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}

.sidebar-toggler {
  padding: $sidebar-toggler-padding-y $sidebar-toggler-padding-x;
  font-size: $sidebar-toggler-font-size;
  line-height: 1;
  background: transparent;
  border: $border-width solid transparent;
  @include border-radius($sidebar-toggler-border-radius);

  @include hover-focus {
    text-decoration: none;
  }
}

.sidebar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-up($next) {
        display: block !important;

        .nav-text {
          display: block;
        }
      }
    }
  }
}

.sidebar-modal {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-up($next) {
        @include sidebar-modal;
      }

      &-down {
        @include media-breakpoint-down($next) {
          @include sidebar-modal;
        }
      }
    }
  }

  .sidebar {
    height: 100%;
  }
}

.sidebar-dialog {
  margin: 0 !important;
  height: 100%;

  .sidebar-modal.fade & {
    @include transition($modal-transition);
    transform: $sidebar-modal-fade-transform;
  }
  .sidebar-modal.show & {
    transform: $modal-show-transform;
  }

  @include media-breakpoint-up(sm) {
    max-width: 250px;
  }
}

.modal-open {
  .sidebar-modal {
    overflow-x: hidden;
    overflow-y: auto;
  }

  .sidebar {
    pointer-events: auto;
  }
}

.sidebar-light {
  .sidebar-brand {
    color: $sidebar-light-active-color;

    @include hover-focus {
      color: $sidebar-light-active-color;
    }
  }

  .sidebar-nav {
    .nav-link {
      color: $sidebar-light-color;

      @include hover-focus {
        color: $sidebar-light-hover-color;
      }

      &.disabled {
        color: $sidebar-light-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $sidebar-light-active-color;
    }
  }


  .sidebar-toggler {
    color: $sidebar-light-color;
    border-color: $sidebar-light-toggler-border-color;
  }

  .sidebar-text {
    color: $sidebar-light-color;
  }
}

// White links against a dark background
.sidebar-dark {
  .sidebar-brand {
    color: $sidebar-dark-active-color;

    @include hover-focus {
      color: $sidebar-dark-active-color;
    }
  }

  .sidebar-nav {
    .nav-link {
      color: $sidebar-dark-color;

      @include hover-focus {
        color: $sidebar-dark-hover-color;
      }

      &.disabled {
        color: $sidebar-dark-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $sidebar-dark-active-color;
    }
  }


  .sidebar-toggler {
    color: $sidebar-dark-color;
    border-color: $sidebar-dark-toggler-border-color;
  }

  .sidebar-text {
    color: $sidebar-dark-color;
  }
}
