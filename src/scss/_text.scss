// Custom
@each $color, $value in map-remove($custom-colors, "white") {
  @include text-emphasis-variant(".text-#{$color}", $value);
}

// Opacity
@if $enable-opacity {
  @for $alpha from 1 through 9 {
    @each $color, $value in $theme-colors {
      @include text-opacity-variant('.text-#{$color}-#{($alpha * 10)}', $value, ($alpha * .1));
    }
    @each $color, $value in $custom-colors {
      @if $color not in 'white', 'black' and $alpha != 5 {
        @include text-opacity-variant('.text-#{$color}-#{($alpha * 10)}', $value, ($alpha * .1));
      }
    }
  }
}

// Hover
@each $color, $value in $theme-colors {
  .text-hover-#{$color} {
    @include hover-focus {
      color: $value !important;
    }
  }

  @if $enable-opacity {
    @for $alpha from 1 through 9 {
      .text-hover-#{$color}-#{($alpha * 10)} {
        @include hover-focus {
          color: rgba($value, ($alpha * .1)) !important;
        }
      }
    }
  }
}
@each $color, $value in $custom-colors {
  .text-hover-#{$color} {
    @include hover-focus {
      color: $value !important;
    }
  }

  @if $enable-opacity {
    @for $alpha from 1 through 9 {
      .text-hover-#{$color}-#{($alpha * 10)} {
        @include hover-focus {
          color: rgba($value, ($alpha * .1)) !important;
        }
      }
    }
  }
}

// States
@each $color, $value in $theme-colors {
  @include text-state-variant('.text-state-#{$color}', $value);
}
@each $color, $value in map-remove($custom-colors, "black", "white") {
  @include text-state-variant('.text-state-#{$color}', $value);
}
